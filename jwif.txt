(defun jwif ()
  "Convert text to stuff that Inform7 can safely 'say'."
  (interactive)
  (progn
    (goto-char (point-min))
    (while (search-forward "\n\n" nil 't)
      (replace-match "[paragraph break]"))
    (goto-char (point-min))
    (while (search-forward "\n" nil 't)
      (replace-match "[line break]"))   
    (goto-char (point-min))
    (while (search-forward "“" nil 't) ;; open quote
      (replace-match "[quotation mark]"))
    (goto-char (point-min))    (goto-char (point-min))
    (while (search-forward "”" nil 't) ;; close quote
      (replace-match "[quotation mark]"))
    (goto-char (point-min))
    (while (re-search-forward "['’]" nil 't)
      (replace-match "[apostrophe]"))
    (goto-char (point-min))
    (while (search-forward "--" nil 't)
      (replace-match "[unicode 8212]"))
   (goto-char (point-min))
   (while (search-forward "^b" nil 't)
     (replace-match "[bold type]"))
   (goto-char (point-min))
   (while (search-forward "^i" nil 't)
     (replace-match "[italic type]"))
   (goto-char (point-min))
   (while (search-forward "^r" nil 't)
     (replace-match "[roman type]"))
   (goto-char (point-min))
   (while (search-forward "^f" nil 't)
     (replace-match "[fixed letter spacing]"))
   (goto-char (point-min))
   (while (search-forward "^oo" nil 't)
     (replace-match "[one of]"))
   (goto-char (point-min))
   (while (search-forward "^o" nil 't)
     (replace-match "[or]"))
   (goto-char (point-min))
   (while (search-forward "^s" nil 't)
     (replace-match "[stopping]"))
   (goto-char (point-min))
   (while (search-forward "^[" nil 't)
     (replace-match "[bracket]"))
   (goto-char (point-min))
   (while (search-forward "^]" nil 't)
     (replace-match "[close bracket]"))
))
